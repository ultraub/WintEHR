services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: emr-redis
    ports:
      - "6379:6379"
    networks:
      - emr-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: emr-postgres
    environment:
      POSTGRES_USER: emr_user
      POSTGRES_PASSWORD: emr_password
      POSTGRES_DB: emr_db
      POSTGRES_INITDB_ARGS: "--auth-local=trust --auth-host=md5"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d:ro
    networks:
      - emr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U emr_user -d emr_db && psql -U emr_user -d emr_db -c 'SELECT 1 FROM fhir.resources LIMIT 1;' > /dev/null 2>&1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: emr-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backend/data/generated_dicoms:/app/data/generated_dicoms
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://emr_user:emr_password@postgres:5432/emr_db
      - JWT_ENABLED=false
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - REDIS_URL=redis://redis:6379/0
      - USE_REDIS_CACHE=true
    networks:
      - emr-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend with SSL
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: emr-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - REACT_APP_FHIR_ENDPOINT=https://wintehr.eastus2.cloudapp.azure.com/fhir/R4
      - REACT_APP_EMR_API=https://wintehr.eastus2.cloudapp.azure.com/api/emr
      - REACT_APP_CLINICAL_CANVAS_API=https://wintehr.eastus2.cloudapp.azure.com/api/clinical-canvas
      - REACT_APP_API_URL=https://wintehr.eastus2.cloudapp.azure.com
    networks:
      - emr-network
    depends_on:
      - backend

networks:
  emr-network:
    driver: bridge

volumes:
  postgres_data:
